on:
  push:
    branches:
      - "developement"

name: Deploy to Salesforce Production

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18.18.0"

      - name: Cache node modules
        uses: actions/cache@v3
        id: npm_cache_id
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-
            ${{ runner.os }}-

      - name: Check for package-lock.json
        id: check_lockfile
        run: |
          if [ -f package-lock.json ]; then
            echo "lockfile_exists=true" >> $GITHUB_ENV
          else
            echo "lockfile_exists=false" >> $GITHUB_ENV
          fi

      - name: Install Dependencies
        run: |
          if [ "$lockfile_exists" = "true" ]; then
            npm ci
          else
            npm install --legacy-peer-deps
          fi


      # Store secret for both otgs
      - name: 'Populate auth file with SFDX_URL secret of the integration and staging orgs'
        shell: bash
        run: |
            echo ${{ secrets.SFDX_INTEGRATION_URL}} > ./SFDX_INTEGRATION_URL.txt
            echo ${{ secrets.SFDX_STAGING_URL}} > ./SFDX_STAGING_URL.txt
            
      - name: Install Salesforce CLI
        run: |
          npm install --global sfdx-cli
          echo "SFDX installed successfully"
          sfdx --version
      # Authenticate to org
      - name: 'Authenticate to Integration Org'
        run: sfdx auth:sfdxurl:store -f ./SFDX_INTEGRATION_URL.txt -s -a integration

      - name: 'Deploy the entire branch to Integration org'
        run: sfdx force:source:deploy -p "force-app/main/default/classes/MyIterable.cls" -l runSpecifiedTests -r MyIterableTest -w 33 --verbose --loglevel fatal
